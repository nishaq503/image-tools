name: Plugin Release

on:
  push:
    branches:
      - master
      - main
      - dev

permissions:
  contents: write

jobs:
  bumpversion:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install bump2version
        run: |
          python -m pip install --upgrade pip
          pip install bump2version
      - name: Get changed files
        uses: jitterbit/get-changed-files@v1
        id: abc
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Printing
        id: plugin_filter
        run: |
          echo "Added:"
          echo "${{ steps.abc.outputs.added }}"
          echo "Renamed:"
          echo "${{ steps.abc.outputs.renamed }}"
          echo "Modified:"
          echo "${{ steps.abc.outputs.modified }}"
          echo "Added+Modified:"
          echo "${{ steps.abc.outputs.added_modified }}"
        # TODO: Figure out how to get the plugin name from the changed files
      - name: Bump Version
        id: bump_version
        run: |
          cd "${{ steps.plugin_filter.outputs.plugin_dir }}"
          bump2version release
        # TODO: Figure out how to get the old and new version from bump2version and set as outputs for this step
      - name: Commit and Push all changed files
        env:
          CI_COMMIT_MESSAGE: Bumped version for "${{ steps.plugin_filter.outputs.plugin_name }}" from ${{ steps.bump_version.outputs.old_version }} to ${{ steps.bump_version.outputs.new_version }}
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
